// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using baseapi.Models;

#nullable disable

namespace baseapi.Migrations
{
    [DbContext(typeof(BaseapiContext))]
    [Migration("20241202184805_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("baseapi.Models.Selection", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<bool>("IsBookmarked")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "isBookmarked");

                    b.Property<bool>("IsTrending")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "isTrending");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "rating");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "year");

                    b.HasKey("Id");

                    b.ToTable("Selections");
                });

            modelBuilder.Entity("baseapi.Models.Selection", b =>
                {
                    b.OwnsOne("baseapi.Models.Regular", "Regular", b1 =>
                        {
                            b1.Property<string>("SelectionId")
                                .HasColumnType("text");

                            b1.Property<string>("Large")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "large");

                            b1.Property<string>("Medium")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "medium");

                            b1.Property<string>("Small")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "small");

                            b1.HasKey("SelectionId");

                            b1.ToTable("Selections");

                            b1.HasAnnotation("Relational:JsonPropertyName", "regular");

                            b1.WithOwner()
                                .HasForeignKey("SelectionId");
                        });

                    b.OwnsOne("baseapi.Models.Trending", "Trending", b1 =>
                        {
                            b1.Property<string>("SelectionId")
                                .HasColumnType("text");

                            b1.Property<string>("Large")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "large");

                            b1.Property<string>("Small")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "small");

                            b1.HasKey("SelectionId");

                            b1.ToTable("Selections");

                            b1.HasAnnotation("Relational:JsonPropertyName", "trending");

                            b1.WithOwner()
                                .HasForeignKey("SelectionId");
                        });

                    b.Navigation("Regular")
                        .IsRequired();

                    b.Navigation("Trending");
                });
#pragma warning restore 612, 618
        }
    }
}
