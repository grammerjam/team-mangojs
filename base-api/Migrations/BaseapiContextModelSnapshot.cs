// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using baseapi.Models;

#nullable disable

namespace baseapi.Migrations
{
    [DbContext(typeof(BaseapiContext))]
    partial class BaseapiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("baseapi.Models.Regular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Large")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "large");

                    b.Property<string>("Medium")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "medium");

                    b.Property<string>("Small")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "small");

                    b.HasKey("Id");

                    b.ToTable("Regular");

                    b.HasAnnotation("Relational:JsonPropertyName", "regular");
                });

            modelBuilder.Entity("baseapi.Models.Selection", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "category");

                    b.Property<bool>("IsBookmarked")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "isBookmarked");

                    b.Property<bool>("IsTrending")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "isTrending");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "rating");

                    b.Property<int>("ThumbnailId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "title");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "year");

                    b.HasKey("Id");

                    b.HasIndex("ThumbnailId");

                    b.ToTable("Selections");
                });

            modelBuilder.Entity("baseapi.Models.Thumbnail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("RegularId")
                        .HasColumnType("integer");

                    b.Property<int?>("TrendingId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RegularId");

                    b.HasIndex("TrendingId");

                    b.ToTable("Thumbnail");

                    b.HasAnnotation("Relational:JsonPropertyName", "thumbnail");
                });

            modelBuilder.Entity("baseapi.Models.Trending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Large")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "large");

                    b.Property<string>("Small")
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "small");

                    b.HasKey("Id");

                    b.ToTable("Trending");

                    b.HasAnnotation("Relational:JsonPropertyName", "trending");
                });

            modelBuilder.Entity("baseapi.Models.Selection", b =>
                {
                    b.HasOne("baseapi.Models.Thumbnail", "Thumbnail")
                        .WithMany()
                        .HasForeignKey("ThumbnailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Thumbnail");
                });

            modelBuilder.Entity("baseapi.Models.Thumbnail", b =>
                {
                    b.HasOne("baseapi.Models.Regular", "Regular")
                        .WithMany()
                        .HasForeignKey("RegularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("baseapi.Models.Trending", "Trending")
                        .WithMany()
                        .HasForeignKey("TrendingId");

                    b.Navigation("Regular");

                    b.Navigation("Trending");
                });
#pragma warning restore 612, 618
        }
    }
}
